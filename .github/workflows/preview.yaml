name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches-ignore:
      - main
jobs:
  Test:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://yourusername:yourpassword@localhost:5432/yourdatabase
      DIRECT_URL: postgresql://yourusername:yourpassword@localhost:5432/yourdatabase
      CLERK_WEBHOOK_SECRET: mock-clerk-webhook-secret
      STRIPE_SECRET_KEY: mock-stripe-secret-key
      AWS_REGION: mock-aws-region
      AWS_ACCESS_KEY_ID: mock-aws-access-key-id
      AWS_SECRET_ACCESS_KEY: mock-aws-secret-access-key
      AWS_PRIVATE_BUCKET_ARN: mock-aws-private-bucket-arn
      AWS_PRIVATE_BUCKET_NAME: mock-aws-private-bucket-name
      AWS_PUBLIC_BUCKET_ARN: mock-aws-public-bucket-arn
      AWS_PUBLIC_BUCKET_NAME: mock-aws-public-bucket-name
      AWS_PUBLIC_BUCKET_URL: mock-aws-public-bucket-url
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm install --legacy-peer-deps

      - name: Start Docker Compose Services
        run: docker compose up -d --remove-orphans

      - name: Run Prisma Migrations
        run: npm run db:push

      - name: Run Tests
        run: npx jest --detectOpenHandles --forceExit --silent

      - name: Stop Docker Compose Services
        if: always()
        run: docker compose down

  Deploy-Preview:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
